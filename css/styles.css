@import url('https://fonts.googleapis.com/css2?family=Merriweather:ital,wght@0,300;0,400;0,700;0,900;1,300;1,400;1,700;1,900&family=Montserrat:ital,wght@0,100..900;1,100..900&display=swap');

body {
    background-color: #aaa;

    font-family: "Montserrat", Arial, Helvetica, sans-serif;

    font-size: 18px;

    --hue: 150;
    --main-colour: hsl(var(--hue), 62%, 67%);
    --dark-colour: hsl(var(--hue), 84%, 10%);
}

/* List selectors to apply a rule to multiple selectors at once. */
h1, h2, h3, h4 {
    font-family: 'Merriweather', 'Times New Roman', Times, serif;
}

p {
    margin: 2em 0;
}

/* Target elements that follow other elements using + */
h1 + p, 
h2 + p, 
h4 + p, 
h3 + p {
    margin-top: 0;
}

.card {
    background: var(--main-colour);
    border-radius: 10px;
    margin: 1em;
    padding: 0.5em;

    border: 2px solid var(--dark-colour);
    box-shadow: 0 5px 0 var(--dark-colour);

    position: relative;
}

/* Targets all b tags inside of any tag with a class called 'card' */
.card b {
    color: var(--dark-colour);
}

/* target tags inside other tags by listing them without commas */
/* .card p {
    margin: 0;
} */

/* > means "directly inside of". So paragraph tags directly inside of any tag with .card */
.card > p {
    margin: 0;
}

/* :last-child targets the given element only if it's the last one inside its container */
p:last-child {
    margin-bottom: 0;
}

.grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    margin: 40px;
    gap: 40px;
}

/* :first-child targets the very first element inside a container */
/* .grid > div:first-child {
    grid-column: span 2;
} */

/* Making a class to apply to grid children we want to span two columns */
.span-two {
    grid-column: span 2;
}

/* Styles for a table that uses CSS grid */
.table {
    display: grid;
    /* grid-template-columns: 1fr 1fr 1fr 1fr; */
    
    /* If we want to apply styles to alternating rows, then we can instead define the number of rows and set grid-auto-flow to column. This will have the cells stack from top to bottom then move to the right, so our nth-child style will select rows instead of columns. */
    grid-template-rows: 1fr 1fr 1fr 1fr;
    grid-auto-flow: column;
}

/* :nth-child() is used to apply a rule to elements based on which child they are in their container */
table tr:nth-child(2n) {
    background-color: #eee;
}

/* We can also add offsets */
.table :nth-child(2n+1) {
    background-color: #eee;
}

header {
    position: sticky;
    top: 0px;
}

nav {
    display: flex;
    justify-content: center;
    gap: 40px;
    padding: 20px;
    background-color: var(--main-colour);
}

nav a {
    color: black;
    text-decoration: none;
}
nav a:hover {
    /* font-size: 1.2em; */
    transform: scale(1.2);
}
nav a:visited {
    color: black;
}

a {
    color: var(--main-colour);
    font-weight: bold;
}

a:hover {
    color: var(--dark-colour);
}

a:focus {
    outline: red solid 4px;
}

a:visited {
    color: #555;
}

input:focus, textarea:focus {
    background-color: var(--main-colour);
}

button:active {
    background-color: red;
}

.badge {
    width: 50px;
    height: 50px;
    border: 2px solid var(--dark-colour);
    border-radius: 25px;
    display: grid;
    place-content: center;

    font-size: 36px;
    font-weight: bold;
    color: var(--dark-colour);
    background: var(--main-colour);
    z-index: 5;

    box-shadow: 0 5px 0 var(--dark-colour);

    /* move an element around without disturbing the rest of the content. */
    /* position: relative;
    bottom: -30px;
    left: -30px; */

    position: absolute;
    bottom: -20px;
    right: -20px;
}